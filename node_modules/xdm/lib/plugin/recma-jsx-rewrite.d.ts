/**
 * @typedef {import('estree').Program} Program
 *
 * @typedef RecmaJsxRewriteOptions
 * @property {'program' | 'function-body'} [outputFormat='program'] Whether to use an import statement or `arguments[0]` to get the provider
 * @property {string} [providerImportSource] Place to import a provider from
 */
/**
 * A plugin that rewrites JSX in functions to accept components as
 * `props.components` (when the function is called `MDXContent`), or from
 * a provider (if there is one).
 * It also makes sure that any undefined components are defined: either from
 * received components or as a function that throws an error.
 *
 * @param {RecmaJsxRewriteOptions} options
 */
export function recmaJsxRewrite(options?: RecmaJsxRewriteOptions): (tree: Program) => void;
export type Program = import('estree').Program;
export type RecmaJsxRewriteOptions = {
    /**
     * Whether to use an import statement or `arguments[0]` to get the provider
     */
    outputFormat?: 'program' | 'function-body';
    /**
     * Place to import a provider from
     */
    providerImportSource?: string;
};
