/**
 * @typedef {import('estree').Program} Program
 * @typedef {import('vfile').VFile} VFile
 * @typedef {typeof import('source-map').SourceMapGenerator} SourceMapGenerator
 *
 * @typedef RecmaStringifyOptions
 * @property {SourceMapGenerator} [SourceMapGenerator] Generate a source map by passing a `SourceMapGenerator` from `source-map` in
 */
/**
 * A plugin that adds an esast compiler: a small wrapper around `astring` to add
 * support for serializing JSX.
 *
 * @param {RecmaStringifyOptions} [options]
 */
export function recmaStringify(options?: RecmaStringifyOptions): void;
export class recmaStringify {
    /**
     * @typedef {import('estree').Program} Program
     * @typedef {import('vfile').VFile} VFile
     * @typedef {typeof import('source-map').SourceMapGenerator} SourceMapGenerator
     *
     * @typedef RecmaStringifyOptions
     * @property {SourceMapGenerator} [SourceMapGenerator] Generate a source map by passing a `SourceMapGenerator` from `source-map` in
     */
    /**
     * A plugin that adds an esast compiler: a small wrapper around `astring` to add
     * support for serializing JSX.
     *
     * @param {RecmaStringifyOptions} [options]
     */
    constructor(options?: RecmaStringifyOptions);
    Compiler: (tree: Program, file: VFile) => string;
}
export type Program = import('estree').Program;
export type VFile = import('vfile').VFile;
export type SourceMapGenerator = typeof import('source-map').SourceMapGenerator;
export type RecmaStringifyOptions = {
    /**
     * Generate a source map by passing a `SourceMapGenerator` from `source-map` in
     */
    SourceMapGenerator?: SourceMapGenerator;
};
